---
# tasks file for mariadbWP
- name: 'Install MariaDB Server - Family RedHat'
  yum:
    update_cache: yes
    name:
      - mariadb-server
    state: present
  when: (ansible_facts['os_family'] == "RedHat")

- name: 'Install MariaDB Server - Family Debian'
  apt:
    update_cache: yes
    name:
      - mariadb-server
    state: present
  when: (ansible_facts['os_family'] == "Debian")

- name: 'Install python - Family Debian'
  apt:
    pkg: "{{ item }}"
    update-cache: yes
    state: latest
  with_items:
    - python3
    - python3-dev
    - python3-pip
    - python3-pymysql
    - python3-mysqldb
    - default-libmysqlclient-dev
    - build-essential
    - pkg-config
  when: (ansible_facts['os_family'] == "Debian")

- name: 'Install python - Family RedHat'
  yum:
    pkg: "{{ item }}"
    state: latest
  with_items:
    - python3
    - python3-devel
    - python3-pip
    - mysql-devel
    - mysql-connector-python3
    - pkgconfig
  when: (ansible_facts['os_family'] == "RedHat")

- name: 'Start MariadDB Server'
  service:
    name: 'mariadb'
    state: started
    enabled: yes

- name: "Criando um banco de dados para ser utilizado pelo WordPress - Family Debian"
  mysql_db:
    login_unix_socket: "/var/run/mysqld/mysqld.sock"
    name: "{{ db_wp_name }}"
    login_user: root
    state: present
  when: (ansible_facts[ 'os_family'] == "Debian")
  become: yes

- name: "Criando um banco de dados para ser utilizado pelo WordPress - Family RedHat"
  mysql_db:
    login_unix_socket: "/var/lib/mysql/mysql.sock"
    name: "{{ db_wp_name }}"
    login_user: root
    state: present
  when: (ansible_facts[ 'os_family'] == "RedHat")
  become: yes

- name: "Create user with password, all database privileges in database - Family Debian"
  mysql_user:
    login_user: root
    host: localhost
    login_unix_socket: "/var/run/mysqld/mysqld.sock"
    name: "{{ db_wp_username }}"
    password: "{{ db_wp_password }}"
    priv: "{{ db_wp_name }}.*:ALL,GRANT"
    state: present
  when: (ansible_facts[ 'os_family'] == "Debian")
  become: yes

- name: "Removes all anonymous user accounts - Family Debian"
  mysql_user:
    login_unix_socket: "/var/run/mysqld/mysqld.sock"
    name: ''
    host_all: yes
    state: absent
  when: (ansible_facts['os_family'] == "Debian")

- name: "Create user with password, all database privileges in database - Family RedHat"
  mysql_user:
    login_user: root
    host: localhost
    login_unix_socket: "/var/lib/mysql/mysql.sock"
    name: "{{ db_wp_username }}"
    password: "{{ db_wp_password }}"
    priv: "{{ db_wp_name }}.*:ALL,GRANT"
    state: present
  when: (ansible_facts[ 'os_family'] == "RedHat")

- name: "Removes all anonymous user accounts - Family RedHat"
  mysql_user:
    login_unix_socket: "/var/lib/mysql/mysql.sock"
    name: ''
    host_all: yes
    state: absent
  when: (ansible_facts['os_family'] == "RedHat")